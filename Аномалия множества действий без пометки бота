from google.colab import drive
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from IPython.display import display
# Укажите путь к вашему файлу
file_path = '/content/drive/MyDrive/dataset/data_2024-10-04.parquet'#свой путь

# 1. Загрузка данных
def load_data(file_path):
    try:
        df = pd.read_parquet(file_path)
        df['ts'] = pd.to_datetime(df['ts'])
        return df
    except Exception as e:
        print(f"Ошибка при чтении файла: {e}")
        raise
def classify_traffic(df, human_threshold=100, bot_threshold=500):
    """Классификация трафика без распаковки нескольких значений"""
    df = df.copy()
    df['second'] = df['ts'].dt.floor('1s')
    
    # Группировка данных
    traffic_stats = df.groupby(['second', 'ip']).agg(
        requests=('ip', 'size'),
        unique_events=('event', 'nunique'),
        unique_urls=('url', 'nunique'),
        user_agents=('randPAS_user_agent_id', 'nunique')
    ).reset_index()
    
    # Упрощенные критерии классификации
    traffic_stats['category'] = np.where(
        traffic_stats['requests'] >= bot_threshold,
        'bot',
        np.where(
            traffic_stats['requests'] >= human_threshold,
            'human',
            'normal'
        )
    )
    
    # Дополнительная информация о распределении
    print("\nСтатистика классификации:")
    print(f"Всего записей: {len(traffic_stats)}")
    print(f"Боты (≥{bot_threshold} запросов/сек): {len(traffic_stats[traffic_stats['category'] == 'bot'])}")
    print(f"Люди (≥{human_threshold} запросов/сек): {len(traffic_stats[traffic_stats['category'] == 'human'])}")
    print(f"Нормальный трафик: {len(traffic_stats[traffic_stats['category'] == 'normal'])}")
    
    return traffic_stats

def plot_traffic_stats(stats):
    """Упрощенная визуализация"""
    if not stats.empty:
        plt.figure(figsize=(15, 5))
        
        # Распределение по категориям
        plt.subplot(1, 2, 1)
        stats['category'].value_counts().plot(kind='pie', autopct='%1.1f%%')
        plt.title('Распределение трафика')
        
        # Активность по часам
        plt.subplot(1, 2, 2)
        stats['second'].dt.hour.value_counts().sort_index().plot(kind='bar')
        plt.title('Активность по часам')
        plt.xlabel('Час дня')
        
        plt.tight_layout()
        plt.show()

def main_analysis(file_path):
    try:
        # Загрузка данных
        df = load_data(file_path)
        
        # Классификация трафика
        traffic_stats = classify_traffic(df)
        
        # Визуализация
        plot_traffic_stats(traffic_stats[traffic_stats['category'] != 'normal'])
        
        return traffic_stats
    
    except Exception as e:
        print(f"\nОшибка в процессе анализа: {e}")
        return None

# Запуск анализа
drive.mount('/content/drive', force_remount=True)
file_path = '/content/drive/MyDrive/dataset/data_2024-10-04.parquet'#тут тоже свой путь указать
result = main_analysis(file_path)
